r(traveler, initial)
r(travelAgency, necessary, 1)
r(airline, necessary, 1)
r(acquirer, necessary, 1)


a(traveler, ID1) ::
	(
     orderTrip(Destination, Date, Name, CcNumber) => a(travelAgency, ID2) <- userInitiatesOrderTrip(Destination, Date, Name, CcNumber)
     then
       response(FlightStatus, FlightID, FlightPrice, AirlineName) <= a(travelAgency, ID2) <- flights(FlightStatus, FlightID, FlightPrice, AirlineName)
       then
         a(traveler, ID1)
    )
    or
    (
     reserveTicket(FlightID) => a(travelAgency, ID2) <- userMakesAReservation(FlightID)
     then
       response(Reserve) <= a(travelAgency, ID2) <-reserve(Reserve)
       then
         a(traveler, ID1)
     )     
     or
     (      
	  bookTicket(Reserve) => a(travelAgency, ID2) <- userMakesABook(Reserve)
      then
  	    response(Statement) <= a(travelAgency, ID2) <- statement(Statement)
        then
	      response(Eticket) <= a(airline, ID3) <- eTicket(Eticket)
	      then
            a(traveler, ID1)
	 )
	 or
	 (
	 cancelReserve(Reserve) => a(travelAgency, ID2) <- userMakesACancellation(Reserve)
	 then 
	   response(Confirmation) <= a(travelAgency, ID2) <- cancellation(Confirmation)
	   then
	     a(traveler, ID1)
     )   

a(travelAgency, ID2) ::
	(
    orderTrip(Destination, Date, Name, CcNumber) <= a(traveler, ID1) <- registerUser(Name, CcNumber)
    then
      search(Destination, Date) => a(airline, ID3)
      then
        response(FlightStatus, FlightID, FlightPrice, AirlineName) <= a(airline, ID3)
		then
	  	  response(FlightStatus, FlightID, FlightPrice, AirlineName) => a(traveler, ID1)
	 	  then
	    	a(travelAgency, ID2)
	)
    or
    (
    reserveTicket(FlightID) <= a(traveler, ID1) <- travelAgencyMakesAReservation(FlightID, TravelAgencyID)
    then
      reserve(FlightID, TravelAgencyID) => a(airline, ID3)
      then       
        response(ReserveCost) <= a(airline, ID3) <- travelAgencyRegisterReservation(ReserveCost, Reserve)
        then
 	  	  response(Reserve) => a(traveler,IDI) 
	  		then         
            a(travelAgency, ID2)
    )
    or
    (
    cancelReserve(Reserve) <= a(traveler, ID1) <- confirmCancellation(Reserve)
    then
      cancel(Reserve) => a(airline, ID3)
      then
	  response(Confirmation) <= a(airline, ID3)
	    then
          response(Confirmation) => a(traveler, ID1)
          then
            a(travelAgency, ID2)
    )
    or
    (
    bookTicket(Reserve) <= a(traveler, ID1) <- catchUserData(Reserve, Name, CcNumber, TotalPrice)
    then
      check(Reserve, Name, CcNumber, TotalPrice) => a(acquirer, ID4)
      then
        a(travelAgency, ID2)
    )
    or
    (
     approval(Status, TravelAgencyPayment) <= a(acquirer, ID4) <-registerPayment(TravelAgencyPayment)
      	then
      	  confirmation(Reserve, Name, AirlinePayment) <= a(airline, ID3) <- emitStatement(Reserve, Name, AirlinePayment, Statement)
		    then
            response(Statement) => a(traveler, ID1)
            then
              a(travelAgency, ID2)
    )
    or
    (
    notificationTA(Status) <= a(acquirer, ID4)  <- emitNotificationTA(Status, Statement)
    then
      response(Statement) => a(traveler, ID1)
            then
              a(travelAgency, ID2)
    )
    
a(airline, ID3) ::
	(
    search(Destination, Date) <= a(travelAgency, ID2) <- createResponse(Destination, Date, FlightStatus, FlightID, FlightPrice, AirlineName)
    then
      response(FlightStatus, FlightID, FlightPrice, AirlineName) => a(travelAgency, ID2)
      then
        a(airline, ID3)
    )
    or
    (
    reserve(FlightID, TravelAgencyID) <= a(travelAgency, ID2) <- createReserve(FlightID, TravelAgencyID, ReserveCost)
    then
      response(ReserveCost) => a(travelAgency, ID2)
      then
        a(airline, ID3)
    )
    or
    (
    payment(AirlinePayment, Reserve, Name, CcNumber) <= a(acquirer, ID4) 
    then
     confirmation(Reserve, Name, AirlinePayment) => a(travelAgency, ID2) <- createEticket(Reserve, Name, CcNumber, Eticket)
      then
        response(Eticket) => a(traveler, ID1)
        then
          a(airline, ID3) 
    )
    or
    (
     notificationAL(Status) <= a(acquirer, ID4) <- emitNotificationAL(Status, Eticket)
     then
       response(Eticket) => a(traveler, ID1)
            then
              a(airline, ID3)
    )
    or
    (
    cancel(Reserve) <= a(travelAgency, ID2) <- cancelReserve(Reserve, Confirmation)
    then
      response(Confirmation) => a(travelAgency, ID2)
      then
        a(airline, ID3) 
     )
     
a(acquirer, ID4) ::
	(
     check(Reserve, Name, CcNumber, TotalPrice) <= a(travelAgency, ID2) <- check (Reserve, Name, CcNumber, TotalPrice)
	     then
	     (
	     approval(Status, TravelAgencyPayment) => a(travelAgency, ID2) <- countPayments(Name, CcNumber, TotalPrice, Status, TravelAgencyPayment, AirlinePayment)
	     then
	       payment(AirlinePayment, Reserve, Name, CcNumber) => a(airline, ID3)
	   	   then
	   	     a(acquirer, ID4)
		)
		or
    	(
	     notificationTA(Status) => a(travelAgency, ID2) <- verifyStatus(Status)
	     then
	   	   notificationAL(Status) => a(airline, ID3) 
	   	     then 
	  	       a(acquirer, ID4)
		)
	)	
	
